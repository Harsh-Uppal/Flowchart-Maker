class FlowchartItem{constructor(e,t){this.pos=e,this.added=!1,this.newConnector=null,this.index=t,this.connectingCurves=[],this.connectedItems=[],this.connectors=[],this.clickEnabled=!0,this.lastMouseAngle=null;const r=document.querySelector(".flowchartItems"),s=document.createElement("div"),o=document.createElement("div");this.dragger=document.createElement("div"),s.className="flowchartItem",s.tabIndex=0,s.onclick=this.mouseClicked,s.onkeydown=this.keyPressed,s.style.top=this.pos.y+"px",s.style.left=this.pos.x+"px",this.dragger.className="dragger",this.dragger.draggable=!0,this.dragger.ondragenter=this.dragger.ontouchstart=this.mouseDragStart,this.dragger.ondrag=this.dragger.ontouchmove=this.mouseDragged,this.dragger.ondragend=this.dragger.ontouchend=this.mouseDragEnd,o.className="dataContainer",o.appendChild(this.dragger),s.appendChild(o),r.appendChild(s),this.node=s,this.dataContainer=o,this.connectorContainer=this.node}scale=()=>cellSize/50;keyPressed=e=>{"Delete"==e.key&&this.delete()};mouseClicked=()=>{this.clickEnabled?(this.added||(this.added=!0),Inspector.setInspectorProperties(this.properties),Inspector.activate(!0)):this.clickEnabled=!0};mouseDragStart=()=>{dragEnabled=!1};mouseDragged=()=>{this.moveToMouse(),this.updatePosition()};mouseDragEnd=()=>{dragEnabled=!0};calculateConnectorPos=e=>vector(100+e%100-50,100-Math.abs(e));calculateCurvePos=e=>this.pos.mult(cellSize).add(pos).add(this.calculateConnectorPos(e).sub(vector(50,50)).mult(vector(this.connectorContainer.offsetWidth/100,this.connectorContainer.offsetHeight/100).mult(this.scale())));connectorClicked=e=>{if(this.clickEnabled=!1,null!=FlowchartItem.connecting)FlowchartItem.connecting.connectTo(this.index,()=>this.calculateCurvePos(this.connectors[e].rotation));else if(null!=e&&null!=this.connectors&&0!=this.connectors.length){if(0<this.connectingCurves.length&&!this.connectingCurves[this.connectingCurves.length-1].connected&&this.connectingCurves.splice(this.connectingCurves.length-1,1),e===this.newConnector)return this.connectors[this.newConnector].className="connector",this.connectors.forEach((e,t)=>{if(t!=this.newConnector&&e.rotation==this.connectors[this.newConnector].rotation)return this.connectors[this.newConnector].remove(),this.connectors.splice(this.newConnector,1),!0}),void(this.newConnector=null);this.connectingCurves.push(new Curve(()=>this.calculateCurvePos(this.connectors[e].rotation),()=>vector(mouseX,mouseY),!1)),FlowchartItem.connecting=this}};addConnector=()=>{Inspector.activate(!1);const e=this.connectors.length;this.newConnector=e,this.connectors.push(document.createElement("div")),this.connectors[e].className="connector temp",this.connectors[e].onclick=()=>this.connectorClicked(e),this.connectorContainer.appendChild(this.connectors[e])};update(){var e,t;this.added||(this.moveToMouse(),this.updatePosition()),this.node.style.transform=`translate(-50%, -50%) scale(${this.scale()})`,this.connectingCurves.forEach(e=>{e.draw()}),null!=this.newConnector&&(e=vector(mouseX,mouseY).sub(this.pos.mult(cellSize).add(pos)),e=Math.atan2(e.x,e.y),(e=50*Math.round(e/(Math.PI/2)))!=this.lastMouseAngle&&(this.lastMouseAngle=e,t=this.calculateConnectorPos(e),this.connectors[this.newConnector].style.top=t.y+"%",this.connectors[this.newConnector].style.left=t.x+"%",this.connectors[this.newConnector].rotation=e))}moveToMouse(){const e=vector(mouseX-pos.x,mouseY-pos.y).divide(cellSize);this.pos=shiftPressed?e.round():e}updatePosition(){this.node.style.top=this.pos.y*cellSize+pos.y+"px",this.node.style.left=this.pos.x*cellSize+pos.x+"px"}connectTo=(e,t)=>{FlowchartItem.connecting=null,e==this.index?this.connectingCurves.splice(this.connectingCurves.length-1,1):(this.connectingCurves[this.connectingCurves.length-1].p1f=t,this.connectingCurves[this.connectingCurves.length-1].fixed=!0)};delete=()=>{Inspector.activate(!1),flowchartItems.splice(this.index,1),this.node.remove()};setProperty=(e,t,r)=>{null!=e&&"setProperty"!=e&&"default"!=e&&"delete"!=e&&((this.properties[e].multiple?this.properties[e].type[r]:this.properties[e].type).endsWith("header")||(this.properties[e].val=t),this.updateProperty(e,t,r))}}class FlowchartTextBox extends FlowchartItem{constructor(e,t){super(e,t),this.innerNode=document.createElement("div"),this.innerNode.className="text",this.dataContainer.appendChild(this.innerNode),this.resetProperties()}updateProperty=(e,t)=>{switch(e){case"color":this.node.style.backgroundColor=t;break;case"heading":this.dragger.textContent=t;break;case"headColor":this.dragger.style.backgroundColor=t;break;case"headFontColor":this.dragger.style.color=t;break;case"text":this.innerNode.textContent=t;break;case"fontColor":this.innerNode.style.color=t;break;case"fontSize":this.innerNode.style.fontSize=t+"vw"}};resetProperties(){this.properties={head0:createPropertyHeader("General"),color:createProperty("Background Color","color","#ADD8E6"),addConnector:createProperty("Add Connector","Button",this.addConnector,{inputClass:"addBtn"}),head1:createPropertyHeader("Header"),heading:createProperty("Heading","text",""),headColor:createProperty("Heading Background","color","#20B2AA"),headFontColor:createProperty("Heading Color","color","#000000"),head2:createPropertyHeader("Text"),text:createProperty("Text","text","Write something here..."),fontSize:createProperty("Font Size","number",1.2),fontColor:createProperty("Font Color","color","#000000"),setProperty:this.setProperty,delete:this.delete},this.properties.default={...this.properties};for(const e in this.properties)this.setProperty(e,this.properties[e].val)}}class FlowchartImage extends FlowchartItem{constructor(e,t){super(e,t),this.innerNode=document.createElement("img"),this.innerNode.setAttribute("src","./Assets/ImageIcon.png"),this.innerNode.className="image",this.dataContainer.appendChild(this.innerNode),this.resetProperties()}updateProperty=(e,t)=>{switch(e){case"color":this.node.style.backgroundColor=t;break;case"heading":this.dragger.textContent=t;break;case"headColor":this.dragger.style.backgroundColor=t;break;case"headFontColor":this.dragger.style.color=t;break;case"width":this.innerNode.style.width=t+"px";break;case"height":this.innerNode.style.height=t+"px";break;case"imageSrc":this.innerNode.setAttribute("src",t)}};resetProperties(){this.properties={head0:createPropertyHeader("General"),color:createProperty("Background Color","color","#ADD8E6"),addConnector:createProperty("Add Connector","Button",this.addConnector,{inputClass:"addBtn"}),head1:createPropertyHeader("Header"),heading:createProperty("Heading","text",""),headColor:createProperty("Heading Background","color","#20B2AA"),headFontColor:createProperty("Heading Color","color","#000000"),head2:createPropertyHeader("Image"),imageSrc:createProperty("Image Source","text","./Assets/ImageIcon.png"),width:createProperty("Image Width","number",100),height:createProperty("Image Height","number",80),setProperty:this.setProperty,delete:this.delete},this.properties.default={...this.properties};for(const e in this.properties)this.setProperty(e,this.properties[e].val)}}class FlowchartBarGraph extends FlowchartItem{constructor(e,t){super(e,t),this.header=document.createElement("div"),this.node.className="BarGraph",this.dragger.className="bottomBar";const r=document.createElement("div"),s=(r.className="barBtns",document.createElement("button")),o=(s.innerText="+",s.title="Add a new bar",s.onclick=this.addNewBar,document.createElement("button"));o.innerText="-",o.title="Remove the last bar",o.onclick=this.removeBar,r.appendChild(s),r.appendChild(o),this.dragger.appendChild(this.header),this.dragger.appendChild(r),this.node.appendChild(this.dragger),this.connectorContainer=this.dragger,this.resetProperties(),this.bars=[];for(let e=0;e<3;e++)this.addNewBar()}calculateCurvePos=e=>this.pos.mult(cellSize).add(pos).add(this.calculateConnectorPos(e).sub(vector(50,50)).mult(vector(this.dragger.offsetWidth/100,this.dragger.offsetHeight/100)).mult(this.scale()).add(vector(0,this.dataContainer.offsetHeight/2*this.scale())));scale=()=>cellSize/50*this.properties.scale.val;updateProperty=(e,t)=>{switch(e){case"heading":this.header.innerText=t;break;case"headColor":this.dragger.style.backgroundColor=t;break;case"headFontColor":this.dragger.style.color=t;break;case"scale":this.update();break;default:var r;e.startsWith("bar")&&(r=parseInt(e.slice(3,e.length)),this.bars[r].content.textContent=t)}};resetProperties(){this.properties={head0:createPropertyHeader("General"),scale:createProperty("Scale","number",1),addConnector:createProperty("Add Connector","Button",this.addConnector,{inputClass:"addBtn"}),head1:createPropertyHeader("Header"),heading:createProperty("Heading","text",""),headColor:createProperty("Heading Background","color","#20B2AA"),headFontColor:createProperty("Heading Color","color","#000000"),head3:createPropertyHeader("Bars"),setProperty:this.setProperty,delete:this.delete},this.properties.default={...this.properties};for(const e in this.properties)this.setProperty(e,this.properties[e].val)}barScalerDragStarted=()=>{dragEnabled=!1,this.lastDragY=mouseY};barScalerDragEnded=()=>{dragEnabled=!0,this.lastDragY=null};barScalerDragged=e=>{var t=this.lastDragY-mouseY,r=parseFloat(this.bars[e].style.height.slice(0,this.bars[e].style.height.length-2));this.bars[e].style.height=r+t/this.scale()+"px",this.lastDragY=mouseY};addNewBar=()=>{const e=this.bars.length,t=document.createElement("div"),r=document.createElement("div"),s=document.createElement("div");r.ondragstart=r.ontouchstart=this.barScalerDragStarted,r.ondrag=r.ontouchmove=()=>this.barScalerDragged(e),r.ondragend=r.ontouchend=this.barScalerDragEnded,r.draggable=!0,r.className="barScaler",s.className="barDataRotator",s.textContent="Bar "+e,t.style.height=60+20*e+"px",t.appendChild(r),t.appendChild(s),t.content=s,this.dataContainer.appendChild(t),this.bars.push(t),this.properties["bar"+e]=createProperty(null,"text","Bar "+e,{remove:this.removeBar,inputClass:"transparentInput"}),this.dragger.style.height=Math.min(Math.max(1.5,.5*e+.5),3)+"rem"};removeBar=e=>{var t=e.slice(3,4);this.bars[t].remove(),this.bars.splice(t,1),this.properties[e]=null,this.dragger.style.height=Math.min(Math.max(1.5,.5*this.bars.length-1+.5),3)+"rem"}}class FlowchartList extends FlowchartItem{constructor(e,t){super(e,t),this.innerNode=document.createElement("div"),this.items=[],this.dataContainer.appendChild(this.innerNode),this.listNode=document.createElement("ul"),this.listNode.className="flowchartList",this.dataContainer.appendChild(this.listNode),this.headingContainer=document.createElement("div"),this.headingContainer.className="listHeading",this.dragger.appendChild(this.headingContainer);const r=document.createElement("div"),s=(r.className="listBtns",document.createElement("button")),o=document.createElement("button");s.textContent="+",s.onclick=this.addItem,o.textContent="-",o.onclick=this.removeItem,r.appendChild(s),r.appendChild(o),this.dragger.appendChild(r),this.resetProperties();for(let e=0;e<3;e++)this.addItem()}updateProperty=(e,t)=>{switch(e){case"color":this.node.style.backgroundColor=t;break;case"heading":this.headingContainer.textContent=t;break;case"headColor":this.dragger.style.backgroundColor=t;break;case"headFontColor":this.headingContainer.style.color=t;break;case"fontColor":this.listNode.style.color=t;break;case"fontSize":this.listNode.style.fontSize=t+"vw"}e.startsWith("item")&&(e=parseInt(e.slice(4,e.length)),this.items[e].innerText=t)};resetProperties(){this.properties={head0:createPropertyHeader("General"),color:createProperty("Background Color","color","#ADD8E6"),addConnector:createProperty("Add Connector","Button",this.addConnector,{inputClass:"addBtn"}),head1:createPropertyHeader("Header"),heading:createProperty("Heading","text","New List"),headColor:createProperty("Heading Background","color","#20B2AA"),headFontColor:createProperty("Heading Color","color","#000000"),head2:createPropertyHeader("List"),fontSize:createProperty("Font Size","number",1.4),fontColor:createProperty("Font Color","color","#000000"),head3:createPropertyBtnHeader("Items",["addBtn"],this.addItem),setProperty:this.setProperty,delete:this.delete},this.properties.default={...this.properties};for(const e in this.properties)this.setProperty(e,this.properties[e].val)}addItem=()=>{var e=this.items.length;const t=document.createElement("li");t.innerText="Item "+e,this.listNode.appendChild(t),this.items.push(t),this.properties["item"+e]=createProperty(null,"text","Item "+e,{remove:e=>this.removeItem(this.properties[e].index),inputClass:"transparentInput"}),this.properties["item"+e].index=e,Inspector.loadProperties()};removeItem=e=>{e=null!=e?Math.min(e,this.items.length-1):this.items.length-1,this.items[e].remove(),this.items.splice(e,1),delete this.properties["item"+this.items.length]}}class FlowchartPieChart extends FlowchartItem{constructor(e,t){super(e,t),this.node.classList.add("transparent"),this.dataContainer.className="piechart",this.dragger.className="piechartDragger",this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.dataContainer.style.width=this.size+"px",this.dataContainer.style.height=this.size+"px",this.dataContainer.appendChild(this.svg),this.sections=[],this.resizerDragging=null,this.resetProperties();for(let e=0;e<3;e++)this.addSection(!1);this.updateSVG()}scale=()=>cellSize/50*this.properties.scale.val;updateProperty=(e,t,r)=>{switch(e){case"color":this.dragger.style.backgroundColor=t;break;case"scale":this.update();break;case"stroke":this.sections.forEach(e=>e.setAttribute("stroke",t));break;case"fill":this.sections.forEach(e=>e.setAttribute("fill",t));break;case"strokeWeight":this.sections.forEach(e=>e.setAttribute("stroke-width",t)),this.updateSize(),this.updateSVG();break;case"randomFill":if(t)for(let e=0;e<this.sections.length;e++)this.sections[e].rColor="#"+Math.floor(16777215*Math.random()).toString(16);this.updateSVG();break;default:if(e.startsWith("sec")){var s=parseInt(e.slice(3,e.length));switch(r){case 0:this.sections[s].text=t;break;case 1:this.sections[s].size=parseFloat(t)||0;break;case 2:this.sections[s].color=t}this.updateSVG()}}};resetProperties(){this.properties={head0:createPropertyHeader("General"),scale:createProperty("Scale","number",1),addConnector:createProperty("Add Connector","Button",this.addConnector,{inputClass:"addBtn"}),head1:createPropertyHeader("Style"),color:createProperty("Color","color","#20B2AA"),randomFill:createProperty("Radomize Section Colors","checkbox",!1),fill:createProperty("Background Color","color","#000000"),stroke:createProperty("Stroke Color","color","#FFFFFF"),strokeWeight:createProperty("Stroke Weight","number","3"),head2:createPropertyBtnHeader("Sections",["addBtn"],this.addSection),setProperty:this.setProperty,delete:this.delete},this.properties.default={...this.properties};for(const e in this.properties)this.setProperty(e,this.properties[e].val)}updateSVG(){let t=0,r,s,o,i,a,n,c,h=0;this.sections.forEach(e=>h+=e.size),this.sections.forEach(e=>{r=t,t+=e.size/h*(2*Math.PI),s=t,o=this.center+this.r*Math.cos(r),i=this.center+this.r*Math.sin(r),a=this.center+this.r*Math.cos(s),n=this.center+this.r*Math.sin(s),c=`M${this.center},${this.center} L${o},${i} A${this.r},${this.r} 0 ${s-r>Math.PI?1:0},1 ${a},${n}z`,e.setAttributeNS(null,"d",c),e.setAttribute("fill",this.properties.randomFill.val?e.rColor:e.color)})}updateSize(){this.size=200,this.r=this.size/2,this.center=this.size/2+(parseInt(this.properties.strokeWeight.val)||0),this.svg.setAttribute("width",2*this.center+"px"),this.svg.setAttribute("height",2*this.center+"px")}addSection=(e=!0)=>{var t=this.sections.length;const r=document.createElementNS("http://www.w3.org/2000/svg","path");r.setAttribute("stroke","white"),r.setAttribute("stroke-width","5px"),r.size=1,r.text="Section "+(t+1),this.svg.appendChild(r),this.sections.push(r),this.properties["sec"+t]=createProperty(null,["text","number","color"],[r.text,1,"#000000"],{multiple:!0,remove:this.removeSection}),Inspector.loadProperties(),e&&this.updateSVG()};removeSection(e){}}